/*
 * FIWARENGSIV2SpecificationLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package org.fiware.lab.orion.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for HttpCustom type.
 */
public class HttpCustom {
    private String url;
    private Headers headers;
    private Qs qs;

    /**
     * Default constructor.
     */
    public HttpCustom() {
    }

    /**
     * Initialization constructor.
     * @param  url  String value for url.
     * @param  headers  Headers value for headers.
     * @param  qs  Qs value for qs.
     */
    public HttpCustom(
            String url,
            Headers headers,
            Qs qs) {
        this.url = url;
        this.headers = headers;
        this.qs = qs;
    }

    /**
     * Getter for Url.
     * @return Returns the String
     */
    @JsonGetter("url")
    public String getUrl() {
        return url;
    }

    /**
     * Setter for Url.
     * @param url Value for String
     */
    @JsonSetter("url")
    public void setUrl(String url) {
        this.url = url;
    }

    /**
     * Getter for Headers.
     * @return Returns the Headers
     */
    @JsonGetter("headers")
    public Headers getHeaders() {
        return headers;
    }

    /**
     * Setter for Headers.
     * @param headers Value for Headers
     */
    @JsonSetter("headers")
    public void setHeaders(Headers headers) {
        this.headers = headers;
    }

    /**
     * Getter for Qs.
     * @return Returns the Qs
     */
    @JsonGetter("qs")
    public Qs getQs() {
        return qs;
    }

    /**
     * Setter for Qs.
     * @param qs Value for Qs
     */
    @JsonSetter("qs")
    public void setQs(Qs qs) {
        this.qs = qs;
    }

    /**
     * Converts this HttpCustom into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "HttpCustom [" + "url=" + url + ", headers=" + headers + ", qs=" + qs + "]";
    }

    /**
     * Builds a new {@link HttpCustom.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link HttpCustom.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(url, headers, qs);
        return builder;
    }

    /**
     * Class to build instances of {@link HttpCustom}.
     */
    public static class Builder {
        private String url;
        private Headers headers;
        private Qs qs;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  url  String value for url.
         * @param  headers  Headers value for headers.
         * @param  qs  Qs value for qs.
         */
        public Builder(String url, Headers headers, Qs qs) {
            this.url = url;
            this.headers = headers;
            this.qs = qs;
        }

        /**
         * Setter for url.
         * @param  url  String value for url.
         * @return Builder
         */
        public Builder url(String url) {
            this.url = url;
            return this;
        }

        /**
         * Setter for headers.
         * @param  headers  Headers value for headers.
         * @return Builder
         */
        public Builder headers(Headers headers) {
            this.headers = headers;
            return this;
        }

        /**
         * Setter for qs.
         * @param  qs  Qs value for qs.
         * @return Builder
         */
        public Builder qs(Qs qs) {
            this.qs = qs;
            return this;
        }

        /**
         * Builds a new {@link HttpCustom} object using the set fields.
         * @return {@link HttpCustom}
         */
        public HttpCustom build() {
            return new HttpCustom(url, headers, qs);
        }
    }
}
