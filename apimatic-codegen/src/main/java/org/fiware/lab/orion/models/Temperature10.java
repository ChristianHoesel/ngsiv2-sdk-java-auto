/*
 * FIWARENGSIV2SpecificationLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package org.fiware.lab.orion.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import org.fiware.lab.orion.models.containers.Temperature10Value;

/**
 * This is a model class for Temperature10 type.
 */
public class Temperature10 {
    private Temperature10Value value;
    private String type;
    private Integer accuracy;
    private Timestamp timestamp;

    /**
     * Default constructor.
     */
    public Temperature10() {
    }

    /**
     * Initialization constructor.
     * @param  value  Temperature10Value value for value.
     * @param  type  String value for type.
     * @param  accuracy  Integer value for accuracy.
     * @param  timestamp  Timestamp value for timestamp.
     */
    public Temperature10(
            Temperature10Value value,
            String type,
            Integer accuracy,
            Timestamp timestamp) {
        this.value = value;
        this.type = type;
        this.accuracy = accuracy;
        this.timestamp = timestamp;
    }

    /**
     * Getter for Value.
     * @return Returns the Temperature10Value
     */
    @JsonGetter("value")
    public Temperature10Value getValue() {
        return value;
    }

    /**
     * Setter for Value.
     * @param value Value for Temperature10Value
     */
    @JsonSetter("value")
    public void setValue(Temperature10Value value) {
        this.value = value;
    }

    /**
     * Getter for Type.
     * @return Returns the String
     */
    @JsonGetter("type")
    public String getType() {
        return type;
    }

    /**
     * Setter for Type.
     * @param type Value for String
     */
    @JsonSetter("type")
    public void setType(String type) {
        this.type = type;
    }

    /**
     * Getter for Accuracy.
     * @return Returns the Integer
     */
    @JsonGetter("accuracy")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getAccuracy() {
        return accuracy;
    }

    /**
     * Setter for Accuracy.
     * @param accuracy Value for Integer
     */
    @JsonSetter("accuracy")
    public void setAccuracy(Integer accuracy) {
        this.accuracy = accuracy;
    }

    /**
     * Getter for Timestamp.
     * @return Returns the Timestamp
     */
    @JsonGetter("timestamp")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Timestamp getTimestamp() {
        return timestamp;
    }

    /**
     * Setter for Timestamp.
     * @param timestamp Value for Timestamp
     */
    @JsonSetter("timestamp")
    public void setTimestamp(Timestamp timestamp) {
        this.timestamp = timestamp;
    }

    /**
     * Converts this Temperature10 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Temperature10 [" + "value=" + value + ", type=" + type + ", accuracy=" + accuracy
                + ", timestamp=" + timestamp + "]";
    }

    /**
     * Builds a new {@link Temperature10.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Temperature10.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(value, type)
                .accuracy(getAccuracy())
                .timestamp(getTimestamp());
        return builder;
    }

    /**
     * Class to build instances of {@link Temperature10}.
     */
    public static class Builder {
        private Temperature10Value value;
        private String type;
        private Integer accuracy;
        private Timestamp timestamp;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  value  Temperature10Value value for value.
         * @param  type  String value for type.
         */
        public Builder(Temperature10Value value, String type) {
            this.value = value;
            this.type = type;
        }

        /**
         * Setter for value.
         * @param  value  Temperature10Value value for value.
         * @return Builder
         */
        public Builder value(Temperature10Value value) {
            this.value = value;
            return this;
        }

        /**
         * Setter for type.
         * @param  type  String value for type.
         * @return Builder
         */
        public Builder type(String type) {
            this.type = type;
            return this;
        }

        /**
         * Setter for accuracy.
         * @param  accuracy  Integer value for accuracy.
         * @return Builder
         */
        public Builder accuracy(Integer accuracy) {
            this.accuracy = accuracy;
            return this;
        }

        /**
         * Setter for timestamp.
         * @param  timestamp  Timestamp value for timestamp.
         * @return Builder
         */
        public Builder timestamp(Timestamp timestamp) {
            this.timestamp = timestamp;
            return this;
        }

        /**
         * Builds a new {@link Temperature10} object using the set fields.
         * @return {@link Temperature10}
         */
        public Temperature10 build() {
            return new Temperature10(value, type, accuracy, timestamp);
        }
    }
}
