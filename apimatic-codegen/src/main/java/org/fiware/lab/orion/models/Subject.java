/*
 * FIWARENGSIV2SpecificationLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package org.fiware.lab.orion.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for Subject type.
 */
public class Subject {
    private List<Entity> entities;
    private Condition condition;

    /**
     * Default constructor.
     */
    public Subject() {
    }

    /**
     * Initialization constructor.
     * @param  entities  List of Entity value for entities.
     * @param  condition  Condition value for condition.
     */
    public Subject(
            List<Entity> entities,
            Condition condition) {
        this.entities = entities;
        this.condition = condition;
    }

    /**
     * Getter for Entities.
     * @return Returns the List of Entity
     */
    @JsonGetter("entities")
    public List<Entity> getEntities() {
        return entities;
    }

    /**
     * Setter for Entities.
     * @param entities Value for List of Entity
     */
    @JsonSetter("entities")
    public void setEntities(List<Entity> entities) {
        this.entities = entities;
    }

    /**
     * Getter for Condition.
     * @return Returns the Condition
     */
    @JsonGetter("condition")
    public Condition getCondition() {
        return condition;
    }

    /**
     * Setter for Condition.
     * @param condition Value for Condition
     */
    @JsonSetter("condition")
    public void setCondition(Condition condition) {
        this.condition = condition;
    }

    /**
     * Converts this Subject into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Subject [" + "entities=" + entities + ", condition=" + condition + "]";
    }

    /**
     * Builds a new {@link Subject.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Subject.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(entities, condition);
        return builder;
    }

    /**
     * Class to build instances of {@link Subject}.
     */
    public static class Builder {
        private List<Entity> entities;
        private Condition condition;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  entities  List of Entity value for entities.
         * @param  condition  Condition value for condition.
         */
        public Builder(List<Entity> entities, Condition condition) {
            this.entities = entities;
            this.condition = condition;
        }

        /**
         * Setter for entities.
         * @param  entities  List of Entity value for entities.
         * @return Builder
         */
        public Builder entities(List<Entity> entities) {
            this.entities = entities;
            return this;
        }

        /**
         * Setter for condition.
         * @param  condition  Condition value for condition.
         * @return Builder
         */
        public Builder condition(Condition condition) {
            this.condition = condition;
            return this;
        }

        /**
         * Builds a new {@link Subject} object using the set fields.
         * @return {@link Subject}
         */
        public Subject build() {
            return new Subject(entities, condition);
        }
    }
}
