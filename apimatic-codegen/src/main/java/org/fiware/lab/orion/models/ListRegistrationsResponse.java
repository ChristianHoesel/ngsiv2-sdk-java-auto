/*
 * FIWARENGSIV2SpecificationLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package org.fiware.lab.orion.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for ListRegistrationsResponse type.
 */
public class ListRegistrationsResponse {
    private String id;
    private String description;
    private DataProvided dataProvided;
    private Provider provider;
    private String expires;
    private String status;
    private ForwardingInformation forwardingInformation;

    /**
     * Default constructor.
     */
    public ListRegistrationsResponse() {
    }

    /**
     * Initialization constructor.
     * @param  id  String value for id.
     * @param  description  String value for description.
     * @param  dataProvided  DataProvided value for dataProvided.
     * @param  provider  Provider value for provider.
     * @param  expires  String value for expires.
     * @param  status  String value for status.
     * @param  forwardingInformation  ForwardingInformation value for forwardingInformation.
     */
    public ListRegistrationsResponse(
            String id,
            String description,
            DataProvided dataProvided,
            Provider provider,
            String expires,
            String status,
            ForwardingInformation forwardingInformation) {
        this.id = id;
        this.description = description;
        this.dataProvided = dataProvided;
        this.provider = provider;
        this.expires = expires;
        this.status = status;
        this.forwardingInformation = forwardingInformation;
    }

    /**
     * Getter for Id.
     * @return Returns the String
     */
    @JsonGetter("id")
    public String getId() {
        return id;
    }

    /**
     * Setter for Id.
     * @param id Value for String
     */
    @JsonSetter("id")
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Getter for Description.
     * @return Returns the String
     */
    @JsonGetter("description")
    public String getDescription() {
        return description;
    }

    /**
     * Setter for Description.
     * @param description Value for String
     */
    @JsonSetter("description")
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Getter for DataProvided.
     * @return Returns the DataProvided
     */
    @JsonGetter("dataProvided")
    public DataProvided getDataProvided() {
        return dataProvided;
    }

    /**
     * Setter for DataProvided.
     * @param dataProvided Value for DataProvided
     */
    @JsonSetter("dataProvided")
    public void setDataProvided(DataProvided dataProvided) {
        this.dataProvided = dataProvided;
    }

    /**
     * Getter for Provider.
     * @return Returns the Provider
     */
    @JsonGetter("provider")
    public Provider getProvider() {
        return provider;
    }

    /**
     * Setter for Provider.
     * @param provider Value for Provider
     */
    @JsonSetter("provider")
    public void setProvider(Provider provider) {
        this.provider = provider;
    }

    /**
     * Getter for Expires.
     * @return Returns the String
     */
    @JsonGetter("expires")
    public String getExpires() {
        return expires;
    }

    /**
     * Setter for Expires.
     * @param expires Value for String
     */
    @JsonSetter("expires")
    public void setExpires(String expires) {
        this.expires = expires;
    }

    /**
     * Getter for Status.
     * @return Returns the String
     */
    @JsonGetter("status")
    public String getStatus() {
        return status;
    }

    /**
     * Setter for Status.
     * @param status Value for String
     */
    @JsonSetter("status")
    public void setStatus(String status) {
        this.status = status;
    }

    /**
     * Getter for ForwardingInformation.
     * @return Returns the ForwardingInformation
     */
    @JsonGetter("forwardingInformation")
    public ForwardingInformation getForwardingInformation() {
        return forwardingInformation;
    }

    /**
     * Setter for ForwardingInformation.
     * @param forwardingInformation Value for ForwardingInformation
     */
    @JsonSetter("forwardingInformation")
    public void setForwardingInformation(ForwardingInformation forwardingInformation) {
        this.forwardingInformation = forwardingInformation;
    }

    /**
     * Converts this ListRegistrationsResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ListRegistrationsResponse [" + "id=" + id + ", description=" + description
                + ", dataProvided=" + dataProvided + ", provider=" + provider + ", expires="
                + expires + ", status=" + status + ", forwardingInformation="
                + forwardingInformation + "]";
    }

    /**
     * Builds a new {@link ListRegistrationsResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ListRegistrationsResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(id, description, dataProvided, provider, expires, status,
                forwardingInformation);
        return builder;
    }

    /**
     * Class to build instances of {@link ListRegistrationsResponse}.
     */
    public static class Builder {
        private String id;
        private String description;
        private DataProvided dataProvided;
        private Provider provider;
        private String expires;
        private String status;
        private ForwardingInformation forwardingInformation;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  id  String value for id.
         * @param  description  String value for description.
         * @param  dataProvided  DataProvided value for dataProvided.
         * @param  provider  Provider value for provider.
         * @param  expires  String value for expires.
         * @param  status  String value for status.
         * @param  forwardingInformation  ForwardingInformation value for forwardingInformation.
         */
        public Builder(String id, String description, DataProvided dataProvided, Provider provider,
                String expires, String status, ForwardingInformation forwardingInformation) {
            this.id = id;
            this.description = description;
            this.dataProvided = dataProvided;
            this.provider = provider;
            this.expires = expires;
            this.status = status;
            this.forwardingInformation = forwardingInformation;
        }

        /**
         * Setter for id.
         * @param  id  String value for id.
         * @return Builder
         */
        public Builder id(String id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for description.
         * @param  description  String value for description.
         * @return Builder
         */
        public Builder description(String description) {
            this.description = description;
            return this;
        }

        /**
         * Setter for dataProvided.
         * @param  dataProvided  DataProvided value for dataProvided.
         * @return Builder
         */
        public Builder dataProvided(DataProvided dataProvided) {
            this.dataProvided = dataProvided;
            return this;
        }

        /**
         * Setter for provider.
         * @param  provider  Provider value for provider.
         * @return Builder
         */
        public Builder provider(Provider provider) {
            this.provider = provider;
            return this;
        }

        /**
         * Setter for expires.
         * @param  expires  String value for expires.
         * @return Builder
         */
        public Builder expires(String expires) {
            this.expires = expires;
            return this;
        }

        /**
         * Setter for status.
         * @param  status  String value for status.
         * @return Builder
         */
        public Builder status(String status) {
            this.status = status;
            return this;
        }

        /**
         * Setter for forwardingInformation.
         * @param  forwardingInformation  ForwardingInformation value for forwardingInformation.
         * @return Builder
         */
        public Builder forwardingInformation(ForwardingInformation forwardingInformation) {
            this.forwardingInformation = forwardingInformation;
            return this;
        }

        /**
         * Builds a new {@link ListRegistrationsResponse} object using the set fields.
         * @return {@link ListRegistrationsResponse}
         */
        public ListRegistrationsResponse build() {
            return new ListRegistrationsResponse(id, description, dataProvided, provider, expires,
                    status, forwardingInformation);
        }
    }
}
