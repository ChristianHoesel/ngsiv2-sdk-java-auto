/*
 * FIWARENGSIV2SpecificationLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package org.fiware.lab.orion.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for Temperature type.
 */
public class Temperature {
    private double value;
    private String type;
    private Object metadata;

    /**
     * Default constructor.
     */
    public Temperature() {
    }

    /**
     * Initialization constructor.
     * @param  value  double value for value.
     * @param  type  String value for type.
     * @param  metadata  Object value for metadata.
     */
    public Temperature(
            double value,
            String type,
            Object metadata) {
        this.value = value;
        this.type = type;
        this.metadata = metadata;
    }

    /**
     * Getter for Value.
     * @return Returns the double
     */
    @JsonGetter("value")
    public double getValue() {
        return value;
    }

    /**
     * Setter for Value.
     * @param value Value for double
     */
    @JsonSetter("value")
    public void setValue(double value) {
        this.value = value;
    }

    /**
     * Getter for Type.
     * @return Returns the String
     */
    @JsonGetter("type")
    public String getType() {
        return type;
    }

    /**
     * Setter for Type.
     * @param type Value for String
     */
    @JsonSetter("type")
    public void setType(String type) {
        this.type = type;
    }

    /**
     * Getter for Metadata.
     * @return Returns the Object
     */
    @JsonGetter("metadata")
    public Object getMetadata() {
        return metadata;
    }

    /**
     * Setter for Metadata.
     * @param metadata Value for Object
     */
    @JsonSetter("metadata")
    public void setMetadata(Object metadata) {
        this.metadata = metadata;
    }

    /**
     * Converts this Temperature into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Temperature [" + "value=" + value + ", type=" + type + ", metadata=" + metadata
                + "]";
    }

    /**
     * Builds a new {@link Temperature.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Temperature.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(value, type, metadata);
        return builder;
    }

    /**
     * Class to build instances of {@link Temperature}.
     */
    public static class Builder {
        private double value;
        private String type;
        private Object metadata;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  value  double value for value.
         * @param  type  String value for type.
         * @param  metadata  Object value for metadata.
         */
        public Builder(double value, String type, Object metadata) {
            this.value = value;
            this.type = type;
            this.metadata = metadata;
        }

        /**
         * Setter for value.
         * @param  value  double value for value.
         * @return Builder
         */
        public Builder value(double value) {
            this.value = value;
            return this;
        }

        /**
         * Setter for type.
         * @param  type  String value for type.
         * @return Builder
         */
        public Builder type(String type) {
            this.type = type;
            return this;
        }

        /**
         * Setter for metadata.
         * @param  metadata  Object value for metadata.
         * @return Builder
         */
        public Builder metadata(Object metadata) {
            this.metadata = metadata;
            return this;
        }

        /**
         * Builds a new {@link Temperature} object using the set fields.
         * @return {@link Temperature}
         */
        public Temperature build() {
            return new Temperature(value, type, metadata);
        }
    }
}
