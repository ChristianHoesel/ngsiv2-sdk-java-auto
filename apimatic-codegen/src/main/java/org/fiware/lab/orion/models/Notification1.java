/*
 * FIWARENGSIV2SpecificationLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package org.fiware.lab.orion.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for Notification1 type.
 */
public class Notification1 {
    private Http http;
    private List<String> attrs;

    /**
     * Default constructor.
     */
    public Notification1() {
    }

    /**
     * Initialization constructor.
     * @param  http  Http value for http.
     * @param  attrs  List of String value for attrs.
     */
    public Notification1(
            Http http,
            List<String> attrs) {
        this.http = http;
        this.attrs = attrs;
    }

    /**
     * Getter for Http.
     * @return Returns the Http
     */
    @JsonGetter("http")
    public Http getHttp() {
        return http;
    }

    /**
     * Setter for Http.
     * @param http Value for Http
     */
    @JsonSetter("http")
    public void setHttp(Http http) {
        this.http = http;
    }

    /**
     * Getter for Attrs.
     * @return Returns the List of String
     */
    @JsonGetter("attrs")
    public List<String> getAttrs() {
        return attrs;
    }

    /**
     * Setter for Attrs.
     * @param attrs Value for List of String
     */
    @JsonSetter("attrs")
    public void setAttrs(List<String> attrs) {
        this.attrs = attrs;
    }

    /**
     * Converts this Notification1 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Notification1 [" + "http=" + http + ", attrs=" + attrs + "]";
    }

    /**
     * Builds a new {@link Notification1.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Notification1.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(http, attrs);
        return builder;
    }

    /**
     * Class to build instances of {@link Notification1}.
     */
    public static class Builder {
        private Http http;
        private List<String> attrs;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  http  Http value for http.
         * @param  attrs  List of String value for attrs.
         */
        public Builder(Http http, List<String> attrs) {
            this.http = http;
            this.attrs = attrs;
        }

        /**
         * Setter for http.
         * @param  http  Http value for http.
         * @return Builder
         */
        public Builder http(Http http) {
            this.http = http;
            return this;
        }

        /**
         * Setter for attrs.
         * @param  attrs  List of String value for attrs.
         * @return Builder
         */
        public Builder attrs(List<String> attrs) {
            this.attrs = attrs;
            return this;
        }

        /**
         * Builds a new {@link Notification1} object using the set fields.
         * @return {@link Notification1}
         */
        public Notification1 build() {
            return new Notification1(http, attrs);
        }
    }
}
