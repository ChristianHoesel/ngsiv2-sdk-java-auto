/*
 * FIWARENGSIV2SpecificationLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package org.fiware.lab.orion.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for RetrieveEntityResponse type.
 */
public class RetrieveEntityResponse {
    private String type;
    private String id;
    private Temperature3 temperature;
    private Humidity2 humidity;
    private Location2 location;

    /**
     * Default constructor.
     */
    public RetrieveEntityResponse() {
    }

    /**
     * Initialization constructor.
     * @param  type  String value for type.
     * @param  id  String value for id.
     * @param  temperature  Temperature3 value for temperature.
     * @param  humidity  Humidity2 value for humidity.
     * @param  location  Location2 value for location.
     */
    public RetrieveEntityResponse(
            String type,
            String id,
            Temperature3 temperature,
            Humidity2 humidity,
            Location2 location) {
        this.type = type;
        this.id = id;
        this.temperature = temperature;
        this.humidity = humidity;
        this.location = location;
    }

    /**
     * Getter for Type.
     * @return Returns the String
     */
    @JsonGetter("type")
    public String getType() {
        return type;
    }

    /**
     * Setter for Type.
     * @param type Value for String
     */
    @JsonSetter("type")
    public void setType(String type) {
        this.type = type;
    }

    /**
     * Getter for Id.
     * @return Returns the String
     */
    @JsonGetter("id")
    public String getId() {
        return id;
    }

    /**
     * Setter for Id.
     * @param id Value for String
     */
    @JsonSetter("id")
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Getter for Temperature.
     * @return Returns the Temperature3
     */
    @JsonGetter("temperature")
    public Temperature3 getTemperature() {
        return temperature;
    }

    /**
     * Setter for Temperature.
     * @param temperature Value for Temperature3
     */
    @JsonSetter("temperature")
    public void setTemperature(Temperature3 temperature) {
        this.temperature = temperature;
    }

    /**
     * Getter for Humidity.
     * @return Returns the Humidity2
     */
    @JsonGetter("humidity")
    public Humidity2 getHumidity() {
        return humidity;
    }

    /**
     * Setter for Humidity.
     * @param humidity Value for Humidity2
     */
    @JsonSetter("humidity")
    public void setHumidity(Humidity2 humidity) {
        this.humidity = humidity;
    }

    /**
     * Getter for Location.
     * @return Returns the Location2
     */
    @JsonGetter("location")
    public Location2 getLocation() {
        return location;
    }

    /**
     * Setter for Location.
     * @param location Value for Location2
     */
    @JsonSetter("location")
    public void setLocation(Location2 location) {
        this.location = location;
    }

    /**
     * Converts this RetrieveEntityResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "RetrieveEntityResponse [" + "type=" + type + ", id=" + id + ", temperature="
                + temperature + ", humidity=" + humidity + ", location=" + location + "]";
    }

    /**
     * Builds a new {@link RetrieveEntityResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link RetrieveEntityResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(type, id, temperature, humidity, location);
        return builder;
    }

    /**
     * Class to build instances of {@link RetrieveEntityResponse}.
     */
    public static class Builder {
        private String type;
        private String id;
        private Temperature3 temperature;
        private Humidity2 humidity;
        private Location2 location;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  type  String value for type.
         * @param  id  String value for id.
         * @param  temperature  Temperature3 value for temperature.
         * @param  humidity  Humidity2 value for humidity.
         * @param  location  Location2 value for location.
         */
        public Builder(String type, String id, Temperature3 temperature, Humidity2 humidity,
                Location2 location) {
            this.type = type;
            this.id = id;
            this.temperature = temperature;
            this.humidity = humidity;
            this.location = location;
        }

        /**
         * Setter for type.
         * @param  type  String value for type.
         * @return Builder
         */
        public Builder type(String type) {
            this.type = type;
            return this;
        }

        /**
         * Setter for id.
         * @param  id  String value for id.
         * @return Builder
         */
        public Builder id(String id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for temperature.
         * @param  temperature  Temperature3 value for temperature.
         * @return Builder
         */
        public Builder temperature(Temperature3 temperature) {
            this.temperature = temperature;
            return this;
        }

        /**
         * Setter for humidity.
         * @param  humidity  Humidity2 value for humidity.
         * @return Builder
         */
        public Builder humidity(Humidity2 humidity) {
            this.humidity = humidity;
            return this;
        }

        /**
         * Setter for location.
         * @param  location  Location2 value for location.
         * @return Builder
         */
        public Builder location(Location2 location) {
            this.location = location;
            return this;
        }

        /**
         * Builds a new {@link RetrieveEntityResponse} object using the set fields.
         * @return {@link RetrieveEntityResponse}
         */
        public RetrieveEntityResponse build() {
            return new RetrieveEntityResponse(type, id, temperature, humidity, location);
        }
    }
}
