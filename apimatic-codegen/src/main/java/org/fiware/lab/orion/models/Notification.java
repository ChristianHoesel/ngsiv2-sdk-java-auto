/*
 * FIWARENGSIV2SpecificationLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package org.fiware.lab.orion.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for Notification type.
 */
public class Notification {
    private HttpCustom httpCustom;
    private String attrsFormat;
    private List<String> attrs;
    private int timesSent;
    private String lastNotification;
    private String lastFailure;

    /**
     * Default constructor.
     */
    public Notification() {
    }

    /**
     * Initialization constructor.
     * @param  httpCustom  HttpCustom value for httpCustom.
     * @param  attrsFormat  String value for attrsFormat.
     * @param  attrs  List of String value for attrs.
     * @param  timesSent  int value for timesSent.
     * @param  lastNotification  String value for lastNotification.
     * @param  lastFailure  String value for lastFailure.
     */
    public Notification(
            HttpCustom httpCustom,
            String attrsFormat,
            List<String> attrs,
            int timesSent,
            String lastNotification,
            String lastFailure) {
        this.httpCustom = httpCustom;
        this.attrsFormat = attrsFormat;
        this.attrs = attrs;
        this.timesSent = timesSent;
        this.lastNotification = lastNotification;
        this.lastFailure = lastFailure;
    }

    /**
     * Getter for HttpCustom.
     * @return Returns the HttpCustom
     */
    @JsonGetter("httpCustom")
    public HttpCustom getHttpCustom() {
        return httpCustom;
    }

    /**
     * Setter for HttpCustom.
     * @param httpCustom Value for HttpCustom
     */
    @JsonSetter("httpCustom")
    public void setHttpCustom(HttpCustom httpCustom) {
        this.httpCustom = httpCustom;
    }

    /**
     * Getter for AttrsFormat.
     * @return Returns the String
     */
    @JsonGetter("attrsFormat")
    public String getAttrsFormat() {
        return attrsFormat;
    }

    /**
     * Setter for AttrsFormat.
     * @param attrsFormat Value for String
     */
    @JsonSetter("attrsFormat")
    public void setAttrsFormat(String attrsFormat) {
        this.attrsFormat = attrsFormat;
    }

    /**
     * Getter for Attrs.
     * @return Returns the List of String
     */
    @JsonGetter("attrs")
    public List<String> getAttrs() {
        return attrs;
    }

    /**
     * Setter for Attrs.
     * @param attrs Value for List of String
     */
    @JsonSetter("attrs")
    public void setAttrs(List<String> attrs) {
        this.attrs = attrs;
    }

    /**
     * Getter for TimesSent.
     * @return Returns the int
     */
    @JsonGetter("timesSent")
    public int getTimesSent() {
        return timesSent;
    }

    /**
     * Setter for TimesSent.
     * @param timesSent Value for int
     */
    @JsonSetter("timesSent")
    public void setTimesSent(int timesSent) {
        this.timesSent = timesSent;
    }

    /**
     * Getter for LastNotification.
     * @return Returns the String
     */
    @JsonGetter("lastNotification")
    public String getLastNotification() {
        return lastNotification;
    }

    /**
     * Setter for LastNotification.
     * @param lastNotification Value for String
     */
    @JsonSetter("lastNotification")
    public void setLastNotification(String lastNotification) {
        this.lastNotification = lastNotification;
    }

    /**
     * Getter for LastFailure.
     * @return Returns the String
     */
    @JsonGetter("lastFailure")
    public String getLastFailure() {
        return lastFailure;
    }

    /**
     * Setter for LastFailure.
     * @param lastFailure Value for String
     */
    @JsonSetter("lastFailure")
    public void setLastFailure(String lastFailure) {
        this.lastFailure = lastFailure;
    }

    /**
     * Converts this Notification into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Notification [" + "httpCustom=" + httpCustom + ", attrsFormat=" + attrsFormat
                + ", attrs=" + attrs + ", timesSent=" + timesSent + ", lastNotification="
                + lastNotification + ", lastFailure=" + lastFailure + "]";
    }

    /**
     * Builds a new {@link Notification.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Notification.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(httpCustom, attrsFormat, attrs, timesSent, lastNotification,
                lastFailure);
        return builder;
    }

    /**
     * Class to build instances of {@link Notification}.
     */
    public static class Builder {
        private HttpCustom httpCustom;
        private String attrsFormat;
        private List<String> attrs;
        private int timesSent;
        private String lastNotification;
        private String lastFailure;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  httpCustom  HttpCustom value for httpCustom.
         * @param  attrsFormat  String value for attrsFormat.
         * @param  attrs  List of String value for attrs.
         * @param  timesSent  int value for timesSent.
         * @param  lastNotification  String value for lastNotification.
         * @param  lastFailure  String value for lastFailure.
         */
        public Builder(HttpCustom httpCustom, String attrsFormat, List<String> attrs, int timesSent,
                String lastNotification, String lastFailure) {
            this.httpCustom = httpCustom;
            this.attrsFormat = attrsFormat;
            this.attrs = attrs;
            this.timesSent = timesSent;
            this.lastNotification = lastNotification;
            this.lastFailure = lastFailure;
        }

        /**
         * Setter for httpCustom.
         * @param  httpCustom  HttpCustom value for httpCustom.
         * @return Builder
         */
        public Builder httpCustom(HttpCustom httpCustom) {
            this.httpCustom = httpCustom;
            return this;
        }

        /**
         * Setter for attrsFormat.
         * @param  attrsFormat  String value for attrsFormat.
         * @return Builder
         */
        public Builder attrsFormat(String attrsFormat) {
            this.attrsFormat = attrsFormat;
            return this;
        }

        /**
         * Setter for attrs.
         * @param  attrs  List of String value for attrs.
         * @return Builder
         */
        public Builder attrs(List<String> attrs) {
            this.attrs = attrs;
            return this;
        }

        /**
         * Setter for timesSent.
         * @param  timesSent  int value for timesSent.
         * @return Builder
         */
        public Builder timesSent(int timesSent) {
            this.timesSent = timesSent;
            return this;
        }

        /**
         * Setter for lastNotification.
         * @param  lastNotification  String value for lastNotification.
         * @return Builder
         */
        public Builder lastNotification(String lastNotification) {
            this.lastNotification = lastNotification;
            return this;
        }

        /**
         * Setter for lastFailure.
         * @param  lastFailure  String value for lastFailure.
         * @return Builder
         */
        public Builder lastFailure(String lastFailure) {
            this.lastFailure = lastFailure;
            return this;
        }

        /**
         * Builds a new {@link Notification} object using the set fields.
         * @return {@link Notification}
         */
        public Notification build() {
            return new Notification(httpCustom, attrsFormat, attrs, timesSent, lastNotification,
                    lastFailure);
        }
    }
}
